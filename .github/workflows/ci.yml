name: Build and test
on:
  push:
    branches: ["develop"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: tkahng/postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: playground_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: true
          cache-dependency-path: go.sum
          go-version: "1.24.5" # Use Go version 1.23.5

      # Install dependencies
      - name: Install dependencies
        run: go mod tidy

      - name: Setup Test DB
        run: go run . migrate testup

      - name: Run tests
        run: go test -v ./... -race -coverprofile=coverage.txt

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Build image and push to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  migrate:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: true
          cache-dependency-path: go.sum
          go-version: "1.24.5" #

      - name: Run Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: go run . migrate up

  deploy:
    runs-on: ubuntu-latest
    needs: migrate
    steps:
      - name: Deploy App to Dokploy
        uses: qbix-tech/dokploy-deploy-action@v1
        with:
          dokploy_url: http://91.99.124.100:3000
          api_key: ${{ secrets.DOKPLOY_AUTH_TOKEN }}
          application_id: UtH-sYqz1xNb43i7BnEiJ
