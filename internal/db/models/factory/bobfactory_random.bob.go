// Code generated by BobGen psql v0.34.2. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"bytes"
	"encoding/json"
	"fmt"
	"strings"
	"time"

	"github.com/google/uuid"
	"github.com/jaswdr/faker/v2"
	"github.com/stephenafamo/bob/types"
)

var defaultFaker = faker.New()

func random_ProviderTypes(f *faker.Faker) ProviderTypes {
	if f == nil {
		f = &defaultFaker
	}

	all := allProviderTypes()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_Providers(f *faker.Faker) Providers {
	if f == nil {
		f = &defaultFaker
	}

	all := allProviders()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_StripePricingPlanInterval(f *faker.Faker) StripePricingPlanInterval {
	if f == nil {
		f = &defaultFaker
	}

	all := allStripePricingPlanInterval()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_StripePricingType(f *faker.Faker) StripePricingType {
	if f == nil {
		f = &defaultFaker
	}

	all := allStripePricingType()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_StripeSubscriptionStatus(f *faker.Faker) StripeSubscriptionStatus {
	if f == nil {
		f = &defaultFaker
	}

	all := allStripeSubscriptionStatus()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_TaskProjectStatus(f *faker.Faker) TaskProjectStatus {
	if f == nil {
		f = &defaultFaker
	}

	all := allTaskProjectStatus()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_TaskStatus(f *faker.Faker) TaskStatus {
	if f == nil {
		f = &defaultFaker
	}

	all := allTaskStatus()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_TokenTypes(f *faker.Faker) TokenTypes {
	if f == nil {
		f = &defaultFaker
	}

	all := allTokenTypes()
	return all[f.IntBetween(0, len(all)-1)]
}

func random_bool(f *faker.Faker) bool {
	if f == nil {
		f = &defaultFaker
	}

	return f.Bool()
}

func random_float64(f *faker.Faker) float64 {
	if f == nil {
		f = &defaultFaker
	}

	return f.Float64(10, -1_000_000, 1_000_000)
}

func random_int64(f *faker.Faker) int64 {
	if f == nil {
		f = &defaultFaker
	}

	return f.Int64()
}

func random_string(f *faker.Faker) string {
	if f == nil {
		f = &defaultFaker
	}

	return strings.Join(f.Lorem().Words(f.IntBetween(1, 5)), " ")
}

func random_time_Time(f *faker.Faker) time.Time {
	if f == nil {
		f = &defaultFaker
	}

	year := time.Hour * 24 * 365
	min := time.Now().Add(-year)
	max := time.Now().Add(year)
	return f.Time().TimeBetween(min, max)
}

func random_types_JSON_json_RawMessage_(f *faker.Faker) types.JSON[json.RawMessage] {
	if f == nil {
		f = &defaultFaker
	}

	s := &bytes.Buffer{}
	s.WriteRune('{')
	for i := 0; i < f.IntBetween(1, 5); i++ {
		if i > 0 {
			fmt.Fprint(s, ", ")
		}
		fmt.Fprintf(s, "%q:%q", f.Lorem().Word(), f.Lorem().Word())
	}
	s.WriteRune('}')
	return types.NewJSON[json.RawMessage](s.Bytes())
}

func random_types_JSON_map_string_string_(f *faker.Faker) types.JSON[map[string]string] {
	if f == nil {
		f = &defaultFaker
	}

	return types.NewJSON(map[string]string{})
}

func random_uuid_UUID(f *faker.Faker) uuid.UUID {
	if f == nil {
		f = &defaultFaker
	}

	return uuid.New()
}
