// Code generated by BobGen psql v0.31.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

type Factory struct {
	baseAppParamMods           AppParamModSlice
	basePermissionMods         PermissionModSlice
	baseRolePermissionMods     RolePermissionModSlice
	baseRoleMods               RoleModSlice
	baseSchemaMigrationMods    SchemaMigrationModSlice
	baseStripeCustomerMods     StripeCustomerModSlice
	baseStripePriceMods        StripePriceModSlice
	baseStripeProductMods      StripeProductModSlice
	baseStripeSubscriptionMods StripeSubscriptionModSlice
	baseTokenMods              TokenModSlice
	baseUserAccountMods        UserAccountModSlice
	baseUserPermissionMods     UserPermissionModSlice
	baseUserRoleMods           UserRoleModSlice
	baseUserSessionMods        UserSessionModSlice
	baseUserMods               UserModSlice
}

func New() *Factory {
	return &Factory{}
}

func (f *Factory) NewAppParam(mods ...AppParamMod) *AppParamTemplate {
	o := &AppParamTemplate{f: f}

	if f != nil {
		f.baseAppParamMods.Apply(o)
	}

	AppParamModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewPermission(mods ...PermissionMod) *PermissionTemplate {
	o := &PermissionTemplate{f: f}

	if f != nil {
		f.basePermissionMods.Apply(o)
	}

	PermissionModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewRolePermission(mods ...RolePermissionMod) *RolePermissionTemplate {
	o := &RolePermissionTemplate{f: f}

	if f != nil {
		f.baseRolePermissionMods.Apply(o)
	}

	RolePermissionModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewRole(mods ...RoleMod) *RoleTemplate {
	o := &RoleTemplate{f: f}

	if f != nil {
		f.baseRoleMods.Apply(o)
	}

	RoleModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewSchemaMigration(mods ...SchemaMigrationMod) *SchemaMigrationTemplate {
	o := &SchemaMigrationTemplate{f: f}

	if f != nil {
		f.baseSchemaMigrationMods.Apply(o)
	}

	SchemaMigrationModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewStripeCustomer(mods ...StripeCustomerMod) *StripeCustomerTemplate {
	o := &StripeCustomerTemplate{f: f}

	if f != nil {
		f.baseStripeCustomerMods.Apply(o)
	}

	StripeCustomerModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewStripePrice(mods ...StripePriceMod) *StripePriceTemplate {
	o := &StripePriceTemplate{f: f}

	if f != nil {
		f.baseStripePriceMods.Apply(o)
	}

	StripePriceModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewStripeProduct(mods ...StripeProductMod) *StripeProductTemplate {
	o := &StripeProductTemplate{f: f}

	if f != nil {
		f.baseStripeProductMods.Apply(o)
	}

	StripeProductModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewStripeSubscription(mods ...StripeSubscriptionMod) *StripeSubscriptionTemplate {
	o := &StripeSubscriptionTemplate{f: f}

	if f != nil {
		f.baseStripeSubscriptionMods.Apply(o)
	}

	StripeSubscriptionModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewToken(mods ...TokenMod) *TokenTemplate {
	o := &TokenTemplate{f: f}

	if f != nil {
		f.baseTokenMods.Apply(o)
	}

	TokenModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewUserAccount(mods ...UserAccountMod) *UserAccountTemplate {
	o := &UserAccountTemplate{f: f}

	if f != nil {
		f.baseUserAccountMods.Apply(o)
	}

	UserAccountModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewUserPermission(mods ...UserPermissionMod) *UserPermissionTemplate {
	o := &UserPermissionTemplate{f: f}

	if f != nil {
		f.baseUserPermissionMods.Apply(o)
	}

	UserPermissionModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewUserRole(mods ...UserRoleMod) *UserRoleTemplate {
	o := &UserRoleTemplate{f: f}

	if f != nil {
		f.baseUserRoleMods.Apply(o)
	}

	UserRoleModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewUserSession(mods ...UserSessionMod) *UserSessionTemplate {
	o := &UserSessionTemplate{f: f}

	if f != nil {
		f.baseUserSessionMods.Apply(o)
	}

	UserSessionModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewUser(mods ...UserMod) *UserTemplate {
	o := &UserTemplate{f: f}

	if f != nil {
		f.baseUserMods.Apply(o)
	}

	UserModSlice(mods).Apply(o)

	return o
}

func (f *Factory) ClearBaseAppParamMods() {
	f.baseAppParamMods = nil
}

func (f *Factory) AddBaseAppParamMod(mods ...AppParamMod) {
	f.baseAppParamMods = append(f.baseAppParamMods, mods...)
}

func (f *Factory) ClearBasePermissionMods() {
	f.basePermissionMods = nil
}

func (f *Factory) AddBasePermissionMod(mods ...PermissionMod) {
	f.basePermissionMods = append(f.basePermissionMods, mods...)
}

func (f *Factory) ClearBaseRolePermissionMods() {
	f.baseRolePermissionMods = nil
}

func (f *Factory) AddBaseRolePermissionMod(mods ...RolePermissionMod) {
	f.baseRolePermissionMods = append(f.baseRolePermissionMods, mods...)
}

func (f *Factory) ClearBaseRoleMods() {
	f.baseRoleMods = nil
}

func (f *Factory) AddBaseRoleMod(mods ...RoleMod) {
	f.baseRoleMods = append(f.baseRoleMods, mods...)
}

func (f *Factory) ClearBaseSchemaMigrationMods() {
	f.baseSchemaMigrationMods = nil
}

func (f *Factory) AddBaseSchemaMigrationMod(mods ...SchemaMigrationMod) {
	f.baseSchemaMigrationMods = append(f.baseSchemaMigrationMods, mods...)
}

func (f *Factory) ClearBaseStripeCustomerMods() {
	f.baseStripeCustomerMods = nil
}

func (f *Factory) AddBaseStripeCustomerMod(mods ...StripeCustomerMod) {
	f.baseStripeCustomerMods = append(f.baseStripeCustomerMods, mods...)
}

func (f *Factory) ClearBaseStripePriceMods() {
	f.baseStripePriceMods = nil
}

func (f *Factory) AddBaseStripePriceMod(mods ...StripePriceMod) {
	f.baseStripePriceMods = append(f.baseStripePriceMods, mods...)
}

func (f *Factory) ClearBaseStripeProductMods() {
	f.baseStripeProductMods = nil
}

func (f *Factory) AddBaseStripeProductMod(mods ...StripeProductMod) {
	f.baseStripeProductMods = append(f.baseStripeProductMods, mods...)
}

func (f *Factory) ClearBaseStripeSubscriptionMods() {
	f.baseStripeSubscriptionMods = nil
}

func (f *Factory) AddBaseStripeSubscriptionMod(mods ...StripeSubscriptionMod) {
	f.baseStripeSubscriptionMods = append(f.baseStripeSubscriptionMods, mods...)
}

func (f *Factory) ClearBaseTokenMods() {
	f.baseTokenMods = nil
}

func (f *Factory) AddBaseTokenMod(mods ...TokenMod) {
	f.baseTokenMods = append(f.baseTokenMods, mods...)
}

func (f *Factory) ClearBaseUserAccountMods() {
	f.baseUserAccountMods = nil
}

func (f *Factory) AddBaseUserAccountMod(mods ...UserAccountMod) {
	f.baseUserAccountMods = append(f.baseUserAccountMods, mods...)
}

func (f *Factory) ClearBaseUserPermissionMods() {
	f.baseUserPermissionMods = nil
}

func (f *Factory) AddBaseUserPermissionMod(mods ...UserPermissionMod) {
	f.baseUserPermissionMods = append(f.baseUserPermissionMods, mods...)
}

func (f *Factory) ClearBaseUserRoleMods() {
	f.baseUserRoleMods = nil
}

func (f *Factory) AddBaseUserRoleMod(mods ...UserRoleMod) {
	f.baseUserRoleMods = append(f.baseUserRoleMods, mods...)
}

func (f *Factory) ClearBaseUserSessionMods() {
	f.baseUserSessionMods = nil
}

func (f *Factory) AddBaseUserSessionMod(mods ...UserSessionMod) {
	f.baseUserSessionMods = append(f.baseUserSessionMods, mods...)
}

func (f *Factory) ClearBaseUserMods() {
	f.baseUserMods = nil
}

func (f *Factory) AddBaseUserMod(mods ...UserMod) {
	f.baseUserMods = append(f.baseUserMods, mods...)
}
